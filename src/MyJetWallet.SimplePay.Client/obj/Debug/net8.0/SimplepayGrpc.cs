// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: simplepay.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MyJetWallet.SimplePay {
  public static partial class SimplePayClientGrpc
  {
    static readonly string __ServiceName = "MyJetWallet.SimplePay.SimplePayClientGrpc";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.HelloMessage> __Marshaller_MyJetWallet_SimplePay_HelloMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.HelloMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.SimplePayAssetListResponse> __Marshaller_MyJetWallet_SimplePay_SimplePayAssetListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.SimplePayAssetListResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse> __Marshaller_MyJetWallet_SimplePay_SimplePayBlockchainListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.SimplePayBalanceListResponse> __Marshaller_MyJetWallet_SimplePay_SimplePayBalanceListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.SimplePayBalanceListResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto> __Marshaller_MyJetWallet_SimplePay_SimplePayAssetAndNetworkDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.SimplePayAddress> __Marshaller_MyJetWallet_SimplePay_SimplePayAddress = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.SimplePayAddress.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.SimplePayContact> __Marshaller_MyJetWallet_SimplePay_SimplePayContact = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.SimplePayContact.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.SimplePayContactResponse> __Marshaller_MyJetWallet_SimplePay_SimplePayContactResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.SimplePayContactResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MyJetWallet.SimplePay.SimplePayIdDto> __Marshaller_MyJetWallet_SimplePay_SimplePayIdDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyJetWallet.SimplePay.SimplePayIdDto.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MyJetWallet.SimplePay.HelloMessage, global::MyJetWallet.SimplePay.HelloMessage> __Method_Hello = new grpc::Method<global::MyJetWallet.SimplePay.HelloMessage, global::MyJetWallet.SimplePay.HelloMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Hello",
        __Marshaller_MyJetWallet_SimplePay_HelloMessage,
        __Marshaller_MyJetWallet_SimplePay_HelloMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MyJetWallet.SimplePay.HelloMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Notify = new grpc::Method<global::MyJetWallet.SimplePay.HelloMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Notify",
        __Marshaller_MyJetWallet_SimplePay_HelloMessage,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayAssetListResponse> __Method_DictionaryGetAllAssets = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayAssetListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DictionaryGetAllAssets",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_MyJetWallet_SimplePay_SimplePayAssetListResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse> __Method_DictionaryGetAllBlockchains = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DictionaryGetAllBlockchains",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_MyJetWallet_SimplePay_SimplePayBlockchainListResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayBalanceListResponse> __Method_AccountGetAllBalances = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayBalanceListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AccountGetAllBalances",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_MyJetWallet_SimplePay_SimplePayBalanceListResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto, global::MyJetWallet.SimplePay.SimplePayAddress> __Method_AccountGetDepositAddress = new grpc::Method<global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto, global::MyJetWallet.SimplePay.SimplePayAddress>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AccountGetDepositAddress",
        __Marshaller_MyJetWallet_SimplePay_SimplePayAssetAndNetworkDto,
        __Marshaller_MyJetWallet_SimplePay_SimplePayAddress);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MyJetWallet.SimplePay.SimplePayContact, global::MyJetWallet.SimplePay.SimplePayContactResponse> __Method_ContactCreate = new grpc::Method<global::MyJetWallet.SimplePay.SimplePayContact, global::MyJetWallet.SimplePay.SimplePayContactResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ContactCreate",
        __Marshaller_MyJetWallet_SimplePay_SimplePayContact,
        __Marshaller_MyJetWallet_SimplePay_SimplePayContactResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MyJetWallet.SimplePay.SimplePayContact, global::MyJetWallet.SimplePay.SimplePayContactResponse> __Method_ContactUpdate = new grpc::Method<global::MyJetWallet.SimplePay.SimplePayContact, global::MyJetWallet.SimplePay.SimplePayContactResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ContactUpdate",
        __Marshaller_MyJetWallet_SimplePay_SimplePayContact,
        __Marshaller_MyJetWallet_SimplePay_SimplePayContactResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MyJetWallet.SimplePay.SimplePayIdDto, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ContactDelete = new grpc::Method<global::MyJetWallet.SimplePay.SimplePayIdDto, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ContactDelete",
        __Marshaller_MyJetWallet_SimplePay_SimplePayIdDto,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MyJetWallet.SimplePay.SimplePayIdDto, global::MyJetWallet.SimplePay.SimplePayContactResponse> __Method_ContactGetById = new grpc::Method<global::MyJetWallet.SimplePay.SimplePayIdDto, global::MyJetWallet.SimplePay.SimplePayContactResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ContactGetById",
        __Marshaller_MyJetWallet_SimplePay_SimplePayIdDto,
        __Marshaller_MyJetWallet_SimplePay_SimplePayContactResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayContact> __Method_ContactGetAllContactStream = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayContact>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ContactGetAllContactStream",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_MyJetWallet_SimplePay_SimplePayContact);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MyJetWallet.SimplePay.SimplepayReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SimplePayClientGrpc</summary>
    [grpc::BindServiceMethod(typeof(SimplePayClientGrpc), "BindService")]
    public abstract partial class SimplePayClientGrpcBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MyJetWallet.SimplePay.HelloMessage> Hello(global::MyJetWallet.SimplePay.HelloMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Notify(global::MyJetWallet.SimplePay.HelloMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// get all assets
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MyJetWallet.SimplePay.SimplePayAssetListResponse> DictionaryGetAllAssets(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// get all blockchains
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse> DictionaryGetAllBlockchains(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// get all balances
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MyJetWallet.SimplePay.SimplePayBalanceListResponse> AccountGetAllBalances(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// get deposit address for asset and network
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MyJetWallet.SimplePay.SimplePayAddress> AccountGetDepositAddress(global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// create contact and return it with Id
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactCreate(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// update existing contact and return it
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactUpdate(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// delete contact by Id
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ContactDelete(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// get contact by Id
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactGetById(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// get all contacts as stream
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ContactGetAllContactStream(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::MyJetWallet.SimplePay.SimplePayContact> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SimplePayClientGrpc</summary>
    public partial class SimplePayClientGrpcClient : grpc::ClientBase<SimplePayClientGrpcClient>
    {
      /// <summary>Creates a new client for SimplePayClientGrpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SimplePayClientGrpcClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SimplePayClientGrpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SimplePayClientGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SimplePayClientGrpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SimplePayClientGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.HelloMessage Hello(global::MyJetWallet.SimplePay.HelloMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Hello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.HelloMessage Hello(global::MyJetWallet.SimplePay.HelloMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Hello, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.HelloMessage> HelloAsync(global::MyJetWallet.SimplePay.HelloMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.HelloMessage> HelloAsync(global::MyJetWallet.SimplePay.HelloMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Hello, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Notify(global::MyJetWallet.SimplePay.HelloMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Notify(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Notify(global::MyJetWallet.SimplePay.HelloMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Notify, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> NotifyAsync(global::MyJetWallet.SimplePay.HelloMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NotifyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> NotifyAsync(global::MyJetWallet.SimplePay.HelloMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Notify, null, options, request);
      }
      /// <summary>
      /// get all assets
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayAssetListResponse DictionaryGetAllAssets(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DictionaryGetAllAssets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get all assets
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayAssetListResponse DictionaryGetAllAssets(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DictionaryGetAllAssets, null, options, request);
      }
      /// <summary>
      /// get all assets
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayAssetListResponse> DictionaryGetAllAssetsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DictionaryGetAllAssetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get all assets
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayAssetListResponse> DictionaryGetAllAssetsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DictionaryGetAllAssets, null, options, request);
      }
      /// <summary>
      /// get all blockchains
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse DictionaryGetAllBlockchains(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DictionaryGetAllBlockchains(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get all blockchains
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse DictionaryGetAllBlockchains(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DictionaryGetAllBlockchains, null, options, request);
      }
      /// <summary>
      /// get all blockchains
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse> DictionaryGetAllBlockchainsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DictionaryGetAllBlockchainsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get all blockchains
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse> DictionaryGetAllBlockchainsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DictionaryGetAllBlockchains, null, options, request);
      }
      /// <summary>
      /// get all balances
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayBalanceListResponse AccountGetAllBalances(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountGetAllBalances(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get all balances
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayBalanceListResponse AccountGetAllBalances(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AccountGetAllBalances, null, options, request);
      }
      /// <summary>
      /// get all balances
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayBalanceListResponse> AccountGetAllBalancesAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountGetAllBalancesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get all balances
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayBalanceListResponse> AccountGetAllBalancesAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AccountGetAllBalances, null, options, request);
      }
      /// <summary>
      /// get deposit address for asset and network
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayAddress AccountGetDepositAddress(global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountGetDepositAddress(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get deposit address for asset and network
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayAddress AccountGetDepositAddress(global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AccountGetDepositAddress, null, options, request);
      }
      /// <summary>
      /// get deposit address for asset and network
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayAddress> AccountGetDepositAddressAsync(global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountGetDepositAddressAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get deposit address for asset and network
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayAddress> AccountGetDepositAddressAsync(global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AccountGetDepositAddress, null, options, request);
      }
      /// <summary>
      /// create contact and return it with Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayContactResponse ContactCreate(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactCreate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// create contact and return it with Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayContactResponse ContactCreate(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ContactCreate, null, options, request);
      }
      /// <summary>
      /// create contact and return it with Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactCreateAsync(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactCreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// create contact and return it with Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactCreateAsync(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ContactCreate, null, options, request);
      }
      /// <summary>
      /// update existing contact and return it
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayContactResponse ContactUpdate(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// update existing contact and return it
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayContactResponse ContactUpdate(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ContactUpdate, null, options, request);
      }
      /// <summary>
      /// update existing contact and return it
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactUpdateAsync(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// update existing contact and return it
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactUpdateAsync(global::MyJetWallet.SimplePay.SimplePayContact request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ContactUpdate, null, options, request);
      }
      /// <summary>
      /// delete contact by Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ContactDelete(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// delete contact by Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ContactDelete(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ContactDelete, null, options, request);
      }
      /// <summary>
      /// delete contact by Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ContactDeleteAsync(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// delete contact by Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ContactDeleteAsync(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ContactDelete, null, options, request);
      }
      /// <summary>
      /// get contact by Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayContactResponse ContactGetById(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactGetById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get contact by Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MyJetWallet.SimplePay.SimplePayContactResponse ContactGetById(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ContactGetById, null, options, request);
      }
      /// <summary>
      /// get contact by Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactGetByIdAsync(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactGetByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get contact by Id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MyJetWallet.SimplePay.SimplePayContactResponse> ContactGetByIdAsync(global::MyJetWallet.SimplePay.SimplePayIdDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ContactGetById, null, options, request);
      }
      /// <summary>
      /// get all contacts as stream
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MyJetWallet.SimplePay.SimplePayContact> ContactGetAllContactStream(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ContactGetAllContactStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// get all contacts as stream
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MyJetWallet.SimplePay.SimplePayContact> ContactGetAllContactStream(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ContactGetAllContactStream, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SimplePayClientGrpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SimplePayClientGrpcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SimplePayClientGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Hello, serviceImpl.Hello)
          .AddMethod(__Method_Notify, serviceImpl.Notify)
          .AddMethod(__Method_DictionaryGetAllAssets, serviceImpl.DictionaryGetAllAssets)
          .AddMethod(__Method_DictionaryGetAllBlockchains, serviceImpl.DictionaryGetAllBlockchains)
          .AddMethod(__Method_AccountGetAllBalances, serviceImpl.AccountGetAllBalances)
          .AddMethod(__Method_AccountGetDepositAddress, serviceImpl.AccountGetDepositAddress)
          .AddMethod(__Method_ContactCreate, serviceImpl.ContactCreate)
          .AddMethod(__Method_ContactUpdate, serviceImpl.ContactUpdate)
          .AddMethod(__Method_ContactDelete, serviceImpl.ContactDelete)
          .AddMethod(__Method_ContactGetById, serviceImpl.ContactGetById)
          .AddMethod(__Method_ContactGetAllContactStream, serviceImpl.ContactGetAllContactStream).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SimplePayClientGrpcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Hello, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyJetWallet.SimplePay.HelloMessage, global::MyJetWallet.SimplePay.HelloMessage>(serviceImpl.Hello));
      serviceBinder.AddMethod(__Method_Notify, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyJetWallet.SimplePay.HelloMessage, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Notify));
      serviceBinder.AddMethod(__Method_DictionaryGetAllAssets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayAssetListResponse>(serviceImpl.DictionaryGetAllAssets));
      serviceBinder.AddMethod(__Method_DictionaryGetAllBlockchains, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayBlockchainListResponse>(serviceImpl.DictionaryGetAllBlockchains));
      serviceBinder.AddMethod(__Method_AccountGetAllBalances, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayBalanceListResponse>(serviceImpl.AccountGetAllBalances));
      serviceBinder.AddMethod(__Method_AccountGetDepositAddress, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyJetWallet.SimplePay.SimplePayAssetAndNetworkDto, global::MyJetWallet.SimplePay.SimplePayAddress>(serviceImpl.AccountGetDepositAddress));
      serviceBinder.AddMethod(__Method_ContactCreate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyJetWallet.SimplePay.SimplePayContact, global::MyJetWallet.SimplePay.SimplePayContactResponse>(serviceImpl.ContactCreate));
      serviceBinder.AddMethod(__Method_ContactUpdate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyJetWallet.SimplePay.SimplePayContact, global::MyJetWallet.SimplePay.SimplePayContactResponse>(serviceImpl.ContactUpdate));
      serviceBinder.AddMethod(__Method_ContactDelete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyJetWallet.SimplePay.SimplePayIdDto, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ContactDelete));
      serviceBinder.AddMethod(__Method_ContactGetById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyJetWallet.SimplePay.SimplePayIdDto, global::MyJetWallet.SimplePay.SimplePayContactResponse>(serviceImpl.ContactGetById));
      serviceBinder.AddMethod(__Method_ContactGetAllContactStream, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::MyJetWallet.SimplePay.SimplePayContact>(serviceImpl.ContactGetAllContactStream));
    }

  }
}
#endregion
